openlm_config_generic:
  configmap:
    name: openlm-config-generic
    vars_list:
      Audit__Kafka__ProducerConfig__BootstrapServers: 'kafka.openlm.svc.cluster.local:9092'
      AuthIntegration__ConsumerConfig__SaslMechanism: 'Plain'
      AuthIntegration__ConsumerConfig__SessionTimeoutMs: '5000'
      AUTHORITY_URL: 'https://sasm0p000252.adc-apac.corpintra.net/identity' #sasm0p000252.adc-apac.corpintra.net
      BROKER_MAIL: 'broker-noreply@openlm.com'
      CLOUD_MODE: 'false'
      DB_TYPE: 'SqlServer_SQLServerAuth'
      ENABLE_SECURITY: 'true'
      IDENTITY_DATABASE_CONNECTIONSTRING: 'Data Source=sawm0p000464.adc-apac.corpintra.net;Initial Catalog=annapurna_id; User ID=sa;Password=Daimler@1234; Min Pool Size=0;Max Pool Size=100;Encrypt=False;TrustServerCertificate=False'
      IDENTITY_MAIL: 'identity-noreply@openlm.com'
      INFRASTRUCTURE__AUTHORITYURL: 'https://sasm0p000252.adc-apac.corpintra.net/identity' #sasm0p000252.adc-apac.corpintra.net
      INFRASTRUCTURE__CLOUDMODE: 'false'
      INFRASTRUCTURE__KAFKABOOTSTRAPSERVERS: 'kafka.openlm.svc.cluster.local:9092'
      INFRASTRUCTURE__LBFQDN: 'sasm0p000252.adc-apac.corpintra.net'
      INFRASTRUCTURE__MONGODB__CONNECTIONSTRING: 'mongodb://root:password@mongodb-service.openlm.svc.cluster.local:27017'
      INFRASTRUCTURE__MONGODB__TELEMETRYSETTINGS__CAPTUREQUERYTEXT: 'false'
      INFRASTRUCTURE__MONGODB__TELEMETRYSETTINGS__ENABLETELEMETRY: 'true'
      INFRASTRUCTURE__REDIS__CONNECTIONSTRING: 'redis:6379'
      INFRASTRUCTURE__REDISCONNECTION: 'redis.openlm.svc.cluster.local:6379'
      INFRASTRUCTURE__USESECURITY: 'true'
      integration__agentsHub__hostname: 'openlm-agentshub'
      integration__agentsHub__port: '5035'
      integration__dongleMonitoring__hostname: 'openlm-donglemonitoring'
      integration__dongleMonitoring__port: '3007'
      integration__featureService__hostname: 'openlm-featureservice'
      integration__featureService__port: '8090'
      integration__operationalApi__hostname: 'openlm-operationalapi'
      integration__operationalApi__port: '8100'
      integration__processManager__hostname: 'openlm-processmanager'
      integration__processManager__port: '5036'
      integration__projectsService__hostname: 'openlm-projectsserviceapi'
      integration__projectsService__port: '5030'
      integration__ugsService__hostname: 'openlm-usersandgroupsservice'
      integration__ugsService__port: '7084'
      integration__usageService__hostname: 'openlm-usageservice'
      integration__usageService__port: '8101'
      integration__usersAndGroupsService__hostname: 'openlm-usersandgroupsservice'
      integration__usersAndGroupsService__port: '7084'
      KAFKA_BOOTSTRAPSERVERS_CONNECTION: 'kafka.openlm.svc.cluster.local:9092'
      KAFKA_RESTPROXY_URL: 'http://openlm-kafka-rest-proxy.openlm.svc.cluster.local:8082'
      KAFKARESTAPISERVICENAME: 'openlm-kafka-rest-proxy.svc.cluster.local'
      LB_FQDN: 'sasm0p000252.adc-apac.corpintra.net'
      LICENSEMANAGER__BaseUrl: 'http://openlm-licensemanager.openlm:7248/'
      LicenseManager__BaseURL: 'http://openlm-licensemanager.openlm:7248/'
      LicenseManager__FeaturesConsumerSettings__BootstrapServers: 'kafka.openlm.svc.cluster.local:9092'
      LICENSEMANAGER__ISENABLED: 'false'
      LoginSettings__DefaultLockoutTimeInMinutes: '10'
      LoginSettings__LocalLogin: 'true'
      LoginSettings__LockoutOnFailure: 'true'
      LoginSettings__MaxFailedAccessAttempts: '5'
      LoginSettings__WindowsLogin: 'true'
      LoginSettings__WindowsLoginDisplayName: 'Windows Authentication'
      ML_PYTHON_RUNNER: '/usr/local/bin/python'
      ML_USAGEPATTERNS_PATH: '/opt/usagepatterns'
      MONGODB__CONNECTIONSTRING: 'mongodb://root:password@mongodb.openlm-infrastructure:27017'
      MONGODB_CONNECTION: 'mongodb://root:password@mongodb.openlm-infrastructure:27017'
      NotificationsIntegration__ProducerSettings__AutoOffsetReset: '1'
      NotificationsIntegration__ProducerSettings__EnablePartitionEof: 'false'
      NotificationsIntegration__ProducerSettings__Identifier: 'notifications-producer'
      NotificationsIntegration__ProducerSettings__SessionTimeoutMs: '6000'
      NotificationsIntegration__ProducerSettings__TopicName: 'notifications-service'
      PERSONAL_DASHBOARD_ADDRESS: 'https://sasm0p000252.adc-apac.corpintra.net/personal-dashboard'
      REDIS__CONNECTIONSTRING: 'redis.openlm.svc.cluster.local:6379'
      REDIS_CONNECTION: 'redis.openlm.svc.cluster.local:6379'
      REPORTING_DATABASE_CONNECTIONSTRING: 'Host=postgres.openlm.svc.cluster.local;Port=5432;Database=identitydb;Username=postgres;Password=password;'
      SERVER_DATABASE_CONNECTIONSTRING: 'Data Source=hostname:sawm0p000464.adc-apac.corpintra.net;Initial Catalog=annapurna_op; User ID=sa;Password=Daimler@1234; Min Pool Size=0;Max Pool Size=100;Encrypt=False;TrustServerCertificate=False'
      SERVER_VERSION: '24.10.2.742'
      SMTP_ADDRESS: 'null'
      SMTP_HOST: '0'
      SMTP_PASSWORD: 'null'
      SMTP_PORT: '25'
      SMTP_SECURITY: 'false'
      SMTP_SSL: 'true'
      SMTP_USER: 'null'
      UGSINTEGRATION__UGSCLIENTEVENTSPRODUCERSETTINGS__IDENTIFIER: 'UgsClientEventsProducer'
      UGSINTEGRATION__UGSCLIENTEVENTSPRODUCERSETTINGS__PRODUCERCONFIG__AUTOOFFSETRESET: '1'
      UGSINTEGRATION__UGSCLIENTEVENTSPRODUCERSETTINGS__PRODUCERCONFIG__ENABLEPARTITIONEOF: 'false'
      UGSINTEGRATION__UGSCLIENTEVENTSPRODUCERSETTINGS__PRODUCERCONFIG__SESSIONTIMEOUTMS: '6000'
      UGSINTEGRATION__UGSCLIENTEVENTSPRODUCERSETTINGS__TOPICNAME: 'ugs-client-events'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__CONSUMERCONFIG__AUTOOFFSETRESET: '1'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__CONSUMERCONFIG__ENABLEAUTOCOMMIT: 'true'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__CONSUMERCONFIG__ENABLEPARTITIONEOF: 'false'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__CONSUMERCONFIG__GROUPID: 'pocclient'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__CONSUMERCONFIG__SESSIONTIMEOUTMS: '6000'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__IDENTIFIER: 'UgsEventsConsumer'
      UGSINTEGRATION__UGSEVENTSCONSUMERSETTINGS__TOPICNAMES__0: 'ugs-events'
      UGSINTEGRATION__UGSURL: 'http://openlm-usersandgroupsservice:7084/'
      UI_OAUTH_ISSUER_URL: 'https://sasm0p000252.adc-apac.corpintra.net/identity'
openlm_telemetry_config_generic:
  configmap:
    name: openlm-telemetry-config-generic
    vars_list:
      TELEMETRY__COLLECTORENDPOINT: 'http://otel-collector.openlm-telemetry:4317'
      TELEMETRY__ENABLED: 'true'
      TELEMETRY__ENVIRONMENTNAME: 'sasm0p000252.adc-apac.corpintra.net'
      TELEMETRY__METRICSCONFIGURATION__EXPORTMETRICS: 'true'
      TELEMETRY__TracingConfiguration___AddHangfireInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___AddHotChocolateInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___AddHttpClientInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___AddMongoDBInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___AddMySqlConnectorInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___AddRedisInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___EntityFrameworkTracingConfiguration__AddEntityFrameworkInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___EntityFrameworkTracingConfiguration__SetDbStatementForStoredProcedure: 'true'
      TELEMETRY__TracingConfiguration___EntityFrameworkTracingConfiguration__SetDbStatementForText: 'true'
      TELEMETRY__TracingConfiguration___QuartzTracingConfiguration__AddQuartzInstrumentation: 'true'
      TELEMETRY__TracingConfiguration___QuartzTracingConfiguration__RecordException: 'true'
  
usersandgroupsserviceui:
  enabled: false
  deployment:
    name: 'openlm-usersandgroupsserviceui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-usersandgroupsserviceui:1.241121.0929'
    ports:
      containerPort: 80
      name: 'ugsui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'ugsui'
      port: 80
      targetPort: 80
    name: 'openlm-usersandgroupsserviceui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'usersandgroupsserviceui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/users-and-groups(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 80

usersandgroupsservice:
  enabled: true 
  deployment:
    name: 'openlm-usersandgroupsservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-usersandgroupsservice:1.241121.0737'
    ports:
      containerPort: 7084
      name: 'ugs-7084'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'ugs-7084'
      port: 7084
      targetPort: 7084
    name: 'openlm-usersandgroupsservice'
    namespace: 'openlm'

usageservice:
  enabled: true 
  deployment:
    name: 'openlm-usageservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-usageservice:1.241114.0932'
    ports:
      containerPort: 8101
      name: 'usageservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'usageservice'
      port: 8101
      targetPort: 8101
    name: 'openlm-usageservice'
    namespace: 'openlm'

uiconfigurationserviceui:
  enabled: false
  deployment:
    name: 'openlm-uiconfigurationserviceui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-uiconfigurationserviceui:1.250508.1500'
    ports:
      containerPort: 8050
      name: 'configserviceui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'configserviceui'
      port: 8050
      targetPort: 8050
    name: 'openlm-uiconfigurationserviceui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'uiconfigurationserviceui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/ui-configuration-service(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

uiconfigurationservice:
  enabled: false
  deployment:
    name: 'openlm-uiconfigurationservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-uiconfigurationservice:1.250508.1448'
    ports:
      containerPort: 6523
      name: 'uiconfigservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'uiconfigservice'
      port: 6523
      targetPort: 6523
    name: 'openlm-uiconfigurationservice'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

touchpointeventsui:
  enabled: false
  deployment:
    name: 'openlm-touchpointeventsui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-touchpointeventsui:1.241121.1101'
    ports:
      containerPort: 8050
      name: 'touchptevent'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'touchptevent'
      port: 8050
      targetPort: 8050
    name: 'openlm-touchpointeventsui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'touchpointeventsui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/touch-point-events(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050

sessioncreator:
  enabled: false
  deployment:
    name: 'openlm-sessioncreator'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-sessioncreator:1.241125.0623'
    ports:
      containerPort: 5037
      name: 'sessioncreator'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'sessioncreator'
      port: 5037
      targetPort: 5037
    name: 'openlm-sessioncreator'
    namespace: 'openlm'

servicenowalertintegration:
  enabled: false
  deployment:
    name: 'openlm-servicenowalertintegration'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-servicenowalertintegration:dev_24.11.26.1340'
    ports:
      containerPort: 5001
      name: 'nowconnector'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'nowconnector'
      port: 5001
      targetPort: 5001
    name: 'openlm-servicenowalertintegration'
    namespace: 'openlm'

server:
  enabled: true 
  deployment:
    name: 'openlm-server'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-server:1.241118.1234'
    ports:
      containerPort: 5015
      name: 'serverapi'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'serverapi'
      port: 5015
      targetPort: 5015
    name: 'openlm-server'
    namespace: 'openlm'

redisui:
  enabled: false
  deployment:
    name: 'openlm-redisui'
    namespace: 'openlm'
    image: 'redislabs/redisinsight:1.14.0'
    ports:
      containerPort: 8001
      name: 'redisui'
  pvc:
    name: 'redisinsightdb'
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
      volume.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
    resources:
      requests:
        storage: '2Gi'
    storageClassName: 'harvester'
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'redisui'
      port: 8001
      targetPort: 8001
    name: 'openlm-redisui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    ingressClassName: 'nginx'
    name: 'redisui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'dev-k8s-us-cloud.openlm.com'
    path: '/redisui(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8001
  configmap:
    name: 'redisui-env-vars'
    vars_list:
      RIPROXYENABLE: 'true'
      RIPROXYPATH: '/redisui'
      RITRUSTEDORIGINS: 'https://dev-k8s-us-cloud.openlm.com'

redis:
  enabled: false
  deployment:
    name: 'openlm-redis'
    namespace: 'openlm'
    image: 'redis:alpine3.17:24.12.6.941'
    ports:
      containerPort: 6379
      name: 'redis'
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'redis'
      port: 6379
      targetPort: 6379
    name: 'openlm-redis'
    namespace: 'openlm'

projectsserviceui:
  enabled: false
  deployment:
    name: 'openlm-projectsserviceui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-projectsserviceui:1.241121.0710'
    ports:
      containerPort: 5032
      name: 'projectsui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'projectsui'
      port: 5032
      targetPort: 5032
    name: 'openlm-projectsserviceui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'projectsserviceui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/projects(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 5032

projectsservicemigration:
  enabled: false
  deployment:
    name: 'openlm-projectsservicemigration'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-projectsservicemigration:1.241121.0759'
    ports:
      containerPort: 5031
      name: 'projmigration'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'projmigration'
      port: 5031
      targetPort: 5031
    name: 'openlm-projectsservicemigration'
    namespace: 'openlm'

projectsserviceapi:
  enabled: false
  deployment:
    name: 'openlm-projectsserviceapi'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-projectsserviceapi:1.241120.1325'
    ports:
      containerPort: 5030
      name: 'projectsapi'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'projectsapi'
      port: 5030
      targetPort: 5030
    name: 'openlm-projectsserviceapi'
    namespace: 'openlm'

productsserviceui:
  enabled: false
  deployment:
    name: 'openlm-productsui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-productsserviceui:1.250508.1430'
    ports:
      containerPort: 8050
      name: 'productsui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'productsui'
      port: 8050
      targetPort: 8050
    name: 'openlm-productsui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'productsui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/products-service(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

productservice:
  enabled: false
  deployment:
    name: 'openlm-productservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-productservice:1.250508.1428'
    ports:
      containerPort: 8001
      name: 'prserviceport'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'prserviceport'
      port: 8001
      targetPort: 8001
    name: 'openlm-productservice'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

processsessionsui:
  enabled: false
  deployment:
    name: 'openlm-processsessionsui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-processsessionsui:1.250103.1437'
    ports:
      containerPort: 8051
      name: 'processsession'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'processsession'
      port: 8051
      targetPort: 8051
    name: 'openlm-processsessionsui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    ingressClassName: 'nginx'
    name: 'processsessionsui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/process-sessions(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8051

processmanagerui:
  enabled: false
  deployment:
    name: 'openlm-processmanagerui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-processmanagerui:1.241120.0904'
    ports:
      containerPort: 6036
      name: 'ui6036'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'ui6036'
      port: 6036
      targetPort: 6036
    name: 'openlm-processmanagerui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'processmanagerui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/process-manager(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 6036

processmanager:
  enabled: true 
  deployment:
    name: 'openlm-processmanager'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-processmanager:1.241120.0845'
    ports:
      containerPort: 5036
      name: 'pmanager5036'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'pmanager5036'
      port: 5036
      targetPort: 5036
    name: 'openlm-processmanager'
    namespace: 'openlm'

personaldashboard:
  enabled: false
  deployment:
    name: 'openlm-personaldashboard'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-personaldashboard:1.241119.1149'
    ports:
      containerPort: 53555
      name: 'pd53555'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'pd53555'
      port: 53555
      targetPort: 53555
    name: 'openlm-personaldashboard'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'personaldashboard-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/personal-dashboard(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 53555

operationalapi:
  enabled: true 
  deployment:
    name: 'openlm-operationalapi'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-operationalapi:1.241118.1128'
    ports:
      containerPort: 8100
      name: 'operationalapi'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'operationalapi'
      port: 8100
      targetPort: 8100
    name: 'openlm-operationalapi'
    namespace: 'openlm'

openlm_logging_config_generic:
  enabled: true 
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  configmap:
    name: 'openlm-logging-config-generic'
    vars_list:
      LOGGINGCONFIGURATION__ENRICH__0: 'FromLogContext'
      LOGGINGCONFIGURATION__ENRICH__1: 'WithLokiInfoLogLevel'
      LOGGINGCONFIGURATION__ENRICH__2: 'WithShortSourceContext'
      LOGGINGCONFIGURATION__ENRICH__3: 'X'
      LOGGINGCONFIGURATION__ENRICH__4: 'X'
      LOGGINGCONFIGURATION__ENRICH__5: 'X'
      LOGGINGCONFIGURATION__ENRICH__6: 'X'
      LOGGINGCONFIGURATION__ENRICH__7: 'X'
      LOGGINGCONFIGURATION__LEVELSWITCHES__controlSwitch: 'Debug'
      LOGGINGCONFIGURATION__USING__0: 'Serilog.Formatting.Compact'
      LOGGINGCONFIGURATION__USING__1: 'OpenLM.Infrastructure.Logging'
      LOGGINGCONFIGURATION__USING__2: 'OpenLM.Infrastructure.Logging'
      LOGGINGCONFIGURATION__WRITETO__0__NAME: 'X'
      LOGGINGCONFIGURATION__WRITETO__1__NAME: 'X'
      LOGGINGCONFIGURATION__WRITETO__2__ARGS__FORMATTER: 'Serilog.Formatting.Compact.RenderedCompactJsonFormatter, Serilog.Formatting.Compact'
      LOGGINGCONFIGURATION__WRITETO__2__ARGS__RESTRICTEDTOMINIMUMLEVEL: 'Debug'
      LOGGINGCONFIGURATION__WRITETO__2__NAME: 'Console'
      LOGGINGCONFIGURATION__MINIMUMLEVEL__Override__Quartz: 'Warning'

navigationservice:
  enabled: false
  deployment:
    name: 'openlm-navigationservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-navigationservice:1.250508.1400'
    ports:
      containerPort: 8018
      name: 'navigation'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'navigation'
      port: 8018
      targetPort: 8018
    name: 'openlm-navigationservice'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

mongodb:
  enabled: false
  deployment:
    name: 'openlm-mongodb'
    namespace: 'openlm'
    image: 'mongo:6.0.4'
    ports:
      containerPort: 27017
      name: 'mongodb'
  pvc:
    name: 'mongodb-data'
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
      volume.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
    resources:
      requests:
        storage: '20Gi'
    storageClassName: 'harvester'
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'mongodb'
      port: 27017
      targetPort: 27017
    name: 'openlm-mongodb'
    namespace: 'openlm'
  configmap:
    name: 'mongodb-env-vars'
    vars_list:
      MONGODB_USER: 'openlm'
      MONGODB_PASS: 'openlm'
      MONGODB_DATABASE: 'openlm'
      MONGO_INITDB_ROOT_USERNAME: 'admin'
      MONGO_INITDB_ROOT_PASSWORD: 'admin'
  kafkaconfig:
    name: ""

licensesui:
  enabled: false
  deployment:
    name: 'openlm-licensesui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licensesui:1.241118.0830'
    ports:
      containerPort: 8050
      name: 'licensesui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licensesui'
      port: 8050
      targetPort: 8050
    name: 'openlm-licensesui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'licensesui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/licenses(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050

licenseserversui:
  enabled: false
  deployment:
    name: 'openlm-licenseserversui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licenseserversui:1.241118.0744'
    ports:
      containerPort: 8064
      name: 'licenseserui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licenseserui'
      port: 8064
      targetPort: 8064
    name: 'openlm-licenseserversui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'licenseserversui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/license-servers(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8064

licensemanagerui:
  enabled: false
  deployment:
    name: 'openlm-licensemanagerui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licensemanagerui:1.250313.1054'
    ports:
      containerPort: 7249
      name: 'licensemanui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licensemanui'
      port: 7249
      targetPort: 7249
    name: 'openlm-licensemanagerui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'licensemanagerui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/licensemanager(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 7249
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

licensemanager:
  enabled: true 
  deployment:
    name: 'openlm-licensemanager'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licensemanager:1.250313.1053'
    ports:
      containerPort: 7248
      name: 'licensemanager'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licensemanager'
      port: 7248
      targetPort: 7248
    name: 'openlm-licensemanager'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

licenseharvester:
  enabled: false
  deployment:
    name: 'openlm-licenseharvester'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licenseharvester:1.241122.0604'
    ports:
      containerPort: 5050
      name: 'harvester5050'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'harvester5050'
      port: 5050
      targetPort: 5050
    name: 'openlm-licenseharvester'
    namespace: 'openlm'

licensefilecomparatormiddleware:
  enabled: false
  deployment:
    name: 'openlm-licensefilecomparator'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licensefilecomparatormiddleware:1.250328.0931'
    ports:
      containerPort: 8080
      name: 'licencefc'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licencefc'
      port: 8080
      targetPort: 8080
    name: 'openlm-licensefilecomparator'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

licenseallocationsui:
  enabled: false
  deployment:
    name: 'openlm-licenseallocationsui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licenseallocationsui:1.241118.0633'
    ports:
      containerPort: 8050
      name: 'licenseallocui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licenseallocui'
      port: 8050
      targetPort: 8050
    name: 'openlm-licenseallocationsui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'licenseallocationsui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/license-allocations(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050

licenseaccesscontrolui:
  enabled: false
  deployment:
    name: 'openlm-licenseaccesscontrolui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licenseaccesscontrolui:1.250311.0837'
    ports:
      containerPort: 7006
      name: 'licenseaccessui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licenseaccessui'
      port: 7006
      targetPort: 7006
    name: 'openlm-licenseaccesscontrolui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'licenseaccesscontrolui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/license-access-control(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 7006
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

licenseaccesscontrol:
  enabled: false
  deployment:
    name: 'openlm-licenseaccesscontrol'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-licenseaccesscontrol:1.250313.1038'
    ports:
      containerPort: 7005
      name: 'licenseaccess'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'licenseaccess'
      port: 7005
      targetPort: 7005
    name: 'openlm-licenseaccesscontrol'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

kafka:
  enabled: false
  deployment:
    name: 'openlm-kafka'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-kafka:7.5.2:7.5.2'
    ports:
      containerPort: 9092
      name: 'kafka'
  pvc:
    name: 'kafka-storage'
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
      volume.kubernetes.io/storage-provisioner: 'ebs.csi.aws.com'
    resources:
      requests:
        storage: '5Gi'
    storageClassName: 'harvester'
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'kafka'
      port: 9092
      targetPort: 9092
    name: 'openlm-kafka'
    namespace: 'openlm'
  configmap:
    name: 'kafka-env-vars'
    vars_list:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://openlm-kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_EXTERNAL://10.0.0.30:30000'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: 'localhost'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@openlm-kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_EXTERNAL://0.0.0.0:30000'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'L3qWWDmdRVOeHNcthARPfA'
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485880
      KAFKA_MESSAGE_MAX_BYTES: 10485880
  kafkaconfig:
    name: ""

kafka-ui:
  enabled: false
  deployment:
    name: 'openlm-kafka-ui'
    namespace: 'openlm-infrastructure'
    image: 'docker.io/provectuslabs/kafka-ui:v0.7.1'
    ports:
      containerPort: 8080
      name: 'kafka-ui'
  namespace: 'openlm-infrastructure'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'kafka-ui'
      port: 8080
      targetPort: 8080
    name: 'openlm-kafka-ui'
    namespace: 'openlm-infrastructure'
  ingress:
    ingressClassName: 'nginx'
    name: 'kafkaui-ingress'
    namespace: 'openlm-infrastructure'
    hostname: 'dev-k8s-us-cloud.openlm.com'
    path: '/kafkaui(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8080
  configmap:
    name: 'kafka-ui-env-vars'
    vars_list:
      SPRING_CONFIG_ADDITIONAL-LOCATION: '/kafka-ui/config.yml'
      DYNAMIC_CONFIG_enabled: false
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

kafka-rest-proxy:
  enabled: false
  deployment:
    name: 'openlm-kafka-rest-proxy'
    namespace: 'openlm'
    image: 'confluentinc/cp-kafka-rest:latest'
    ports:
      containerPort: 8082
      name: 'kafka-rp'
  namespace: 'openlm'
  taints: ""
  affinity: ""
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'kafka-rp'
      port: 8082
      targetPort: 8082
    name: 'openlm-kafka-rest-proxy'
    namespace: 'openlm'
  configmap:
    name: 'kafka-rest-proxy-env-vars'
    vars_list:
      KAFKA_REST_HOST_NAME: 'openlm-kafka-rest-proxy'
      KAFKA_REST_BOOTSTRAP_SERVERS: 'openlm-kafka:29092'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://openlm-kafka-schema-reg:8081'
  kafkaconfig:
    name: ""

identityui:
  enabled: false
  deployment:
    name: 'openlm-identityui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-identityui:1.250508.1332'
    ports:
      containerPort: 5011
      name: 'olm-identityui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'olm-identityui'
      port: 5011
      targetPort: 5011
    name: 'openlm-identityui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'identity-ui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/identity-ui(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 5011
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

identityfuse:
  enabled: false
  deployment:
    name: 'openlm-identityfuse'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-identityfuse:1.250113.1007'
    ports:
      containerPort: 5000
      name: 'identityfuse'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'identityfuse'
      port: 5000
      targetPort: 5000
    name: 'openlm-identityfuse'
    namespace: 'openlm'

identityapi:
  enabled: false
  deployment:
    name: 'openlm-identityapi'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-identityapi:1.250508.1257'
    ports:
      containerPort: 5013
      name: 'olm-identityapi'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'olm-identityapi'
      port: 5013
      targetPort: 5013
    name: 'openlm-identityapi'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

identity:
  enabled: false
  deployment:
    name: 'openlm-identity'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-identity:1.250403.1123'
    ports:
      containerPort: 5011
      name: 'openlm-identity'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'openlm-identity'
      port: 5011
      targetPort: 5011
    name: 'openlm-identity'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'identity-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/identity(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 5011
  configmap:
    name: 'identity-env-vars'
    vars_list:
      UI_BASE_HREF_URL: 'http://<loadbalancer_hostname>/identity'
      UI_OAUTH_ISSUER_URL: 'http://<loadbalancer_hostname>/identity'
      IssuerUri: 'http://<loadbalancer_hostname>/identity'
      DbType: '<MySql|SqlServer_SQLServerAuth>'
      ConnectionString: '<ConnectionString>'
      Telemetry__enabled: false
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

homepageui:
  enabled: false
  deployment:
    name: 'openlm-homepageui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-homepageui:1.250508.1204'
    ports:
      containerPort: 8050
      name: 'homepageui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'homepageui'
      port: 8050
      targetPort: 8050
    name: 'openlm-homepageui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'homepage-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

homepage:
  enabled: false
  deployment:
    name: 'openlm-homepage'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-homepage:1.250508.0831'
    ports:
      containerPort: 8097
      name: 'homepage'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'homepage'
      port: 8097
      targetPort: 8097
    name: 'openlm-homepage'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

flexlmcompare:
  enabled: false
  deployment:
    name: 'openlm-flexlmcompare'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-flexlmcompare:1.250508.0738'
    ports:
      containerPort: 8501
      name: 'flexlmcompare'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'flexlmcompare'
      port: 8501
      targetPort: 8501
    name: 'openlm-flexlmcompare'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

featureservice:
  enabled: false
  deployment:
    name: 'openlm-featureservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-featureservice:1.241115.0911'
    ports:
      containerPort: 8090
      name: 'featureservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'featureservice'
      port: 8090
      targetPort: 8090
    name: 'openlm-featureservice'
    namespace: 'openlm'

enduserservices:
  enabled: true 
  deployment:
    name: 'openlm-enduserservices'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-enduserservices:1.241119.1115'
    ports:
      containerPort: 53554
      name: 'enduserservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'enduserservice'
      port: 53554
      targetPort: 53554
    name: 'openlm-enduserservices'
    namespace: 'openlm'

dssui:
  enabled: false
  deployment:
    name: 'openlm-dssui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-dssui:1.250305.1010'
    ports:
      containerPort: 7027
      name: 'openlm-dssui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'openlm-dssui'
      port: 7027
      targetPort: 7027
    name: 'openlm-dssui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'dss-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/dss(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 7027
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

donglemonitoringui:
  enabled: false
  deployment:
    name: 'openlm-donglemonitoringui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-donglemonitoringui:1.250404.1508'
    ports:
      containerPort: 3005
      name: 'dongleui3005'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'dongleui3005'
      port: 3005
      targetPort: 3005
    name: 'openlm-donglemonitoringui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'donglemonitoringui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/dongle-monitoring(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 3005
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

donglemonitoring:
  enabled: true 
  deployment:
    name: 'openlm-donglemonitoring'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-donglemonitoring:1.250404.1507'
    ports:
      containerPort: 3007
      name: 'dongle3007'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'dongle3007'
      port: 3007
      targetPort: 3007
    name: 'openlm-donglemonitoring'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

denialsui:
  enabled: false
  deployment:
    name: 'openlm-denialsui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-denialsui:1.250313.1338'
    ports:
      containerPort: 8050
      name: 'denialsui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'denialsui'
      port: 8050
      targetPort: 8050
    name: 'openlm-denialsui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'denialsui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/denials(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 8050
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

denialservice:
  enabled: true 
  deployment:
    name: 'openlm-denialservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-denialservice:1.241114.0857'
    ports:
      containerPort: 8202
      name: 'denialservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'denialservice'
      port: 8202
      targetPort: 8202
    name: 'openlm-denialservice'
    namespace: 'openlm'

brokerhubui:
  enabled: false
  deployment:
    name: 'openlm-brokerhubui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-brokerhubui:1.250508.1117'
    ports:
      containerPort: 6015
      name: 'brokerhubui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'brokerhubui'
      port: 6015
      targetPort: 6015
    name: 'openlm-brokerhubui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'brokerhubui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/broker-hub(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 6015
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

brokerhubconnector:
  enabled: false
  deployment:
    name: 'openlm-brokerhubconnector'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-brokerhubconnector:1.241114.1332'
    ports:
      containerPort: 8091
      name: 'bhc'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'bhc'
      port: 8091
      targetPort: 8091
    name: 'openlm-brokerhubconnector'
    namespace: 'openlm'

brokerhub:
  enabled: true 
  deployment:
    name: 'openlm-brokerhub'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-brokerhub:1.250507.1339'
    ports:
      containerPort: 7015
      name: 'brokerhub'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'brokerhub'
      port: 7015
      targetPort: 7015
    name: 'openlm-brokerhub'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

auditservice:
  enabled: true 
  deployment:
    name: 'openlm-auditservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-auditservice:1.250108.1422'
    ports:
      containerPort: 6511
      name: 'auditservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'auditservice'
      port: 6511
      targetPort: 6511
    name: 'openlm-auditservice'
    namespace: 'openlm'

atlassianintegrationui:
  enabled: false
  deployment:
    name: 'openlm-atlassianintegrationui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-atlassianintegrationui:1.250328.1138'
    ports:
      containerPort: 4200
      name: 'atlassianintui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'atlassianintui'
      port: 4200
      targetPort: 4200
    name: 'openlm-atlassianintegrationui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'atlassianintegrationui-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/atlassian-ui(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 4200
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

atlassianintegration:
  enabled: false
  deployment:
    name: 'openlm-atlassianintegration'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-atlassianintegration:1.250328.1138'
    ports:
      containerPort: 80
      name: 'atlassianint'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'atlassianint'
      port: 80
      targetPort: 80
    name: 'openlm-atlassianintegration'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

apigateway:
  enabled: false
  deployment:
    name: 'openlm-apigateway'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-apigateway:1.250316.0930'
    ports:
      containerPort: 80
      name: 'apigateway'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  configmap:
    name: 'apigateway-env-vars'
    vars_list:
      TYK_GATEWAY_URL: 'http://localhost:8080'
      API_SECRET_PATH: 'api-secret.txt'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

allocationservice:
  enabled: true 
  deployment:
    name: 'openlm-allocationservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-allocationservice:1.241114.0714'
    ports:
      containerPort: 8201
      name: 'allocservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'allocservice'
      port: 8201
      targetPort: 8201
    name: 'openlm-allocationservice'
    namespace: 'openlm'

alertsserviceui:
  enabled: false
  deployment:
    name: 'openlm-alertsserviceui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-alertsserviceui:version_cicd_24.11.14.713'
    ports:
      containerPort: 3004
      name: 'alertsserviceui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'alertsui3004'
      port: 3004
      targetPort: 3004
    name: 'openlm-alertsserviceui'
    namespace: 'openlm'
  ingress:
    ingressName: 'openlm'
    name: 'alertsserviceui-ingress'
    namespace: 'openlm'
    serviceName: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/alerts(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 3004

alertsservice:
  enabled: true 
  deployment:
    name: 'openlm-alertsservice'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-alertsservice:1.250106.0720'
    ports:
      containerPort: 3008
      name: 'alertsservice'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'alertsservice'
      port: 3008
      targetPort: 3008
    name: 'openlm-alertsservice'
    namespace: 'openlm'

agentshubui:
  enabled: false
  deployment:
    name: 'openlm-agentshubui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-agentshubui:1.250505.1720'
    ports:
      containerPort: 6035
      name: 'agentshubui'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'agentshubui'
      port: 6035
      targetPort: 6035
    name: 'openlm-agentshubui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'agentshub-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/agents-hub(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 6035
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

agentshub:
  enabled: true 
  deployment:
    name: 'openlm-agentshub'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-agentshub:1.250422.1537'
    ports:
      containerPort: 5035
      name: 'agentshub'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'agentshub5035'
      port: 5035
      targetPort: 5035
    name: 'openlm-agentshub'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

agentactivitymanagerui:
  enabled: false
  deployment:
    name: 'openlm-agentactivitymanagerui'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-agentactivitymanagerui:1.250323.1121'
    ports:
      containerPort: 6038
      name: 'activityui6038'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'activityui6038'
      port: 6038
      targetPort: 6038
    name: 'openlm-agentactivitymanagerui'
    namespace: 'openlm'
  ingress:
    ingressClassName: 'nginx'
    name: 'agent-act-manager-ingress'
    namespace: 'openlm'
    hostname: 'sasm0p000252.adc-apac.corpintra.net'
    path: '/agent-activity-manager(/|$)(.*)'
    secretName: 'openlm-lb-cert'
    port:
      number: 6038
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

agentactivitymanager:
  enabled: true 
  deployment:
    name: 'openlm-agentactivitymanager'
    namespace: 'openlm'
    image: 'public.ecr.aws/r3q3q2f4/olm-agentactivitymanager:1.250312.1453'
    ports:
      containerPort: 5038
      name: 'actmanager5038'
  namespace: 'openlm'
  taints: 'main'
  affinity: 'main'
  generic:
    name: 'openlm-config-generic'
  logging:
    name: 'openlm-logging-config-generic'
  telemetry:
    name: 'openlm-telemetry-config-generic'
  service:
    ports:
      name: 'actmanager5038'
      port: 5038
      targetPort: 5038
    name: 'openlm-agentactivitymanager'
    namespace: 'openlm'
  kafkaconfig:
    name: ""
  kafka_cluster:
    name: ""

